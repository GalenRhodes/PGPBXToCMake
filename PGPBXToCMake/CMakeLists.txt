execute_process(COMMAND "${GNUSTEP_CONFIG}" "--variable=GNUSTEP_USER_LIBRARIES"   OUTPUT_VARIABLE lib_hints_1 OUTPUT_STRIP_TRAILING_WHITESPACE)
execute_process(COMMAND "${GNUSTEP_CONFIG}" "--variable=GNUSTEP_LOCAL_LIBRARIES"  OUTPUT_VARIABLE lib_hints_2 OUTPUT_STRIP_TRAILING_WHITESPACE)
execute_process(COMMAND "${GNUSTEP_CONFIG}" "--variable=GNUSTEP_SYSTEM_LIBRARIES" OUTPUT_VARIABLE lib_hints_3 OUTPUT_STRIP_TRAILING_WHITESPACE)

find_library(LIBRUBICON NAMES "Rubicon" HINTS "${lib_hints_1}" "${lib_hints_2}" "${lib_hints_3}")
message(STATUS "LIBRUBICON: ${LIBRUBICON}")

file(GLOB_RECURSE PGPBXToCMake_TEST_SRC_C RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" "*.c")
file(GLOB_RECURSE PGPBXToCMake_TEST_SRC_M RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" "*.m")
file(GLOB_RECURSE PGPBXToCMake_TEST_SRC_H RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" "*.h")
message(STATUS "${PGPBXToCMake_TEST_SRC_H}")
set(PGPBXToCMake_TEST_INC_DIR ".")

foreach(afile ${PGPBXToCMake_TEST_SRC_H})
    get_filename_component(dirname "${afile}" DIRECTORY)
    if(dirname STREQUAL "")
        list(APPEND PGPBXToCMake_TEST_INC_DIR ".")
    else()
        list(APPEND PGPBXToCMake_TEST_INC_DIR "${dirname}")
    endif()
endforeach(afile)

list(REMOVE_DUPLICATES PGPBXToCMake_TEST_INC_DIR)
include_directories(${PGPBXToCMake_TEST_INC_DIR})
set(ALL_SRC_FILES "")
list(APPEND ALL_SRC_FILES ${PGPBXToCMake_TEST_SRC_C} ${PGPBXToCMake_TEST_SRC_M} ${PGPBXToCMake_TEST_SRC_H})

set_source_files_properties(${PGPBXToCMake_TEST_SRC_C} PROPERTIES LANGUAGE C COMPILE_FLAGS "-std=gnu99")
set_source_files_properties(${PGPBXToCMake_TEST_SRC_M} PROPERTIES LANGUAGE C COMPILE_FLAGS "${CMAKE_OBJC_FLAGS} -std=gnu99")
set_source_files_properties(${PGPBXToCMake_TEST_SRC_H} PROPERTIES LANGUAGE C HEADER_FILE_ONLY YES)

add_executable(PGPBXToCMake_TEST ${ALL_SRC_FILES})
message(STATUS "CMAKE_OBJC_LINK_FLAGS: ${CMAKE_OBJC_LINK_FLAGS}")

target_link_libraries(PGPBXToCMake_TEST "${LIBRUBICON}")
set_target_properties(PGPBXToCMake_TEST PROPERTIES LINKER_LANGUAGE C LINK_FLAGS "${CMAKE_OBJC_LINK_FLAGS}" OUTPUT_NAME "${PROJECT_DIR_NAME}")
